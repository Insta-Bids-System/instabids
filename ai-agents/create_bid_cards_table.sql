-- Create bid_cards table for storing JAA-generated bid cards
CREATE TABLE IF NOT EXISTS bid_cards (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    cia_thread_id VARCHAR(255) NOT NULL,
    bid_card_number VARCHAR(50) UNIQUE NOT NULL,
    
    -- Project Assessment
    project_type VARCHAR(100),
    urgency_level VARCHAR(20) CHECK (urgency_level IN ('emergency', 'urgent', 'week', 'month', 'flexible', 'planning')),
    complexity_score INTEGER CHECK (complexity_score >= 1 AND complexity_score <= 10),
    contractor_count_needed INTEGER DEFAULT 3,
    
    -- Financial
    budget_min INTEGER,
    budget_max INTEGER,
    
    -- Timeline
    timeline_start DATE,
    timeline_end DATE,
    
    -- Generated Content
    bid_document JSONB NOT NULL, -- Complete bid card data
    requirements_extracted JSONB,
    image_analysis JSONB,
    
    -- Status
    status VARCHAR(20) DEFAULT 'generated' CHECK (status IN ('generated', 'sent', 'active', 'completed', 'cancelled')),
    
    -- Timestamps
    created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL
);

-- Create indexes for performance
CREATE INDEX idx_bid_cards_cia_thread_id ON bid_cards(cia_thread_id);
CREATE INDEX idx_bid_cards_project_type ON bid_cards(project_type);
CREATE INDEX idx_bid_cards_urgency_level ON bid_cards(urgency_level);
CREATE INDEX idx_bid_cards_status ON bid_cards(status);
CREATE INDEX idx_bid_cards_created_at ON bid_cards(created_at DESC);

-- Create updated_at trigger
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = TIMEZONE('utc'::text, NOW());
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_bid_cards_updated_at BEFORE UPDATE
    ON bid_cards FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- Add RLS policies
ALTER TABLE bid_cards ENABLE ROW LEVEL SECURITY;

-- Policy: Service role can do everything
CREATE POLICY "Service role full access" ON bid_cards
    FOR ALL USING (auth.jwt() ->> 'role' = 'service_role');

-- Policy: Authenticated users can read their own bid cards (based on CIA thread)
CREATE POLICY "Users can view their bid cards" ON bid_cards
    FOR SELECT USING (
        EXISTS (
            SELECT 1 FROM agent_conversations
            WHERE agent_conversations.thread_id = bid_cards.cia_thread_id
            AND agent_conversations.user_id = auth.uid()
        )
    );

-- Policy: Contractors can view bid cards for projects they're invited to
-- (This will be expanded when contractor matching is implemented)
CREATE POLICY "Contractors can view assigned bid cards" ON bid_cards
    FOR SELECT USING (
        auth.jwt() ->> 'role' = 'contractor' 
        AND status IN ('sent', 'active')
    );

-- Add comment
COMMENT ON TABLE bid_cards IS 'Stores bid cards generated by JAA from CIA conversations';